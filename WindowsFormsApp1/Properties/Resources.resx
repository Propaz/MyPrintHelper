<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewPrinterKey" xml:space="preserve">
    <value>/il</value>
    <comment>Добавить новй принтер</comment>
  </data>
  <data name="DeleteSelectedPrinterKey" xml:space="preserve">
    <value>/dl</value>
    <comment>Удалить принтер</comment>
  </data>
  <data name="FRPODrawArc" xml:space="preserve">
    <value>!R! RES; UNIT C;MAP 5, 8;PAT 52;ARC 1, 2, -45, 45;MAP 5, 10;PIE 2, 0, 10, 20, 30;ARC 0, 2, 0, 60;PAT 20;ARC 0, 2, 60, 180;PAT 10;ARC 0, 2, 180, 360;PAT 1;NEWP;PMZP 4, 2;PARC 4, 3, 1, 90, 270;PARC 5, 4, 1, 180, 360;PARC 6, 3, 1, 270, 90;PARC 5, 2, 1, 0, 180;STRK;MRP 0.6, 1.1;SFNT "Univers-Md";TEXT "ARC";PAGE; EXIT;</value>
  </data>
  <data name="FRPOFillPattern" xml:space="preserve">
    <value>!R! RES; DAM; UNIT C;FSET 1p08V0s0b5T;MCRO PATTERN;FPAT %1, %2, %3, %4, %5, %6, %7, %8;BOX 5, 1; BLK 5, 1; MRP 0, 1.55;TEXT ’FPAT %1, %2, %3, %4, %5, %6, %7, %8;’, L;ENDM;MAP 2, 2; SCP;CALL PATTERN, 3, 3, 0, 0, 0, 0, 0, 0;CALL PATTERN, 255, 0, 0, 0, 0, 0, 0, 0;CALL PATTERN, 1, 1, 1, 1, 1, 1, 1, 255;RPP; MRP 5.5, 0;CALL PATTERN, 0, 0, 24, 60, 60, 24, 0, 0;CALL PATTERN, 1, 2, 4, 8, 16, 32, 64, 128;CALL PATTERN, 8, 8, 8, 8, 8, 8, 8, 8;PAGE;EXIT;</value>
  </data>
  <data name="FRPOMarginTest" xml:space="preserve">
    <value>!R! MZP 0,0; BOX 30,30; PAGE; EXIT;</value>
  </data>
  <data name="FRPOPrintEventLog" xml:space="preserve">
    <value>!R! ELOG; EXIT;</value>
  </data>
  <data name="FRPOPrintStatusPage" xml:space="preserve">
    <value>!R! STAT; STAT1; EXIT;</value>
  </data>
  <data name="GetPrintServerProperties" xml:space="preserve">
    <value>/s</value>
    <comment>Вызвать Свойства принт-сервера</comment>
  </data>
  <data name="GetPropertiesOfSelectedPrinter" xml:space="preserve">
    <value>/p</value>
    <comment>Получение свойств принтера</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="mainicon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\icons8_print_50_wiD_icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="QueueOfSelectedPrinter" xml:space="preserve">
    <value>/o</value>
    <comment>Очередь печати</comment>
  </data>
  <data name="RestartSpooler" xml:space="preserve">
    <value>/c net stop spooler&amp;&amp;DEL /F /S /Q %systemroot%\\System32\\spool\\PRINTERS\\*&amp;&amp;net start spooler&amp;&amp;pause</value>
  </data>
  <data name="SendDefaultTestPage" xml:space="preserve">
    <value>/k</value>
    <comment>Напечатать стандартную пробную страницу Windows</comment>
  </data>
  <data name="SetPrinterAsDefaultKey" xml:space="preserve">
    <value>/y</value>
    <comment>Сделать принтер по умолчанию</comment>
  </data>
  <data name="StartSpooler" xml:space="preserve">
    <value>/c net start spooler&amp;&amp;pause</value>
  </data>
  <data name="StopSpooler" xml:space="preserve">
    <value>/c net stop spooler&amp;&amp;pause</value>
  </data>
  <data name="FileFilterForOpenFileDialog" xml:space="preserve">
    <value>TXT Files(*.txt)|*.txt|Office Files|*.doc;*.docx;*.xlsx;*.xls;*.ppt;*.pptx|PDF Files(*.pdf)|*.pdf|Image Files|*.png;*.jpg;*.tiff;*.gif|All Files(*.*)|*.*</value>
  </data>
  <data name="FRPODashedPattern" xml:space="preserve">
    <value>!R! RES; UNIT C;
MCRO DPAT;
NEWP;
SPD .2;
SCP;
SFNT "Helvetica-Nr", 10;
TEXT "DPAT %1";
PMRP 1.4, -.1; DPAT %1; PDRP 9, 0;
RPP; PMRP 0, .7;
STRK;
ENDM;
MZP 5, 5;
FONT 13;
CALL DPAT,1;
CALL DPAT,2;
CALL DPAT,3;
CALL DPAT,4;
CALL DPAT,5;
CALL DPAT,6;
CALL DPAT,7;
CALL DPAT,8;
CALL DPAT,9;
CALL DPAT,10;
PAGE;
EXIT;</value>
  </data>
  <data name="FRPODrawCircle" xml:space="preserve">
    <value>!R! RES; UNIT C; SLS .5;
SPD .01; MAP 10, 1;
CIR .1; MRP 0, .1;
CIR .2; MRP 0, .2;
CIR .4; MRP 0, .4;
CIR .8; MRP 0, .8;
SPD .02;
CIR 1.6; MRP 0, 1.6;
CIR 3.2; MRP 0, 3.2;
SPD .2;
CIR .1; MRP .2, .4;
SFNT "Helvetica-Nr"; TEXT "Cursor now here";
PAGE;
EXIT;</value>
  </data>
  <data name="FRPODrawCube" xml:space="preserve">
    <value>!R! RES;
UNIT C; SPD .3;
CMNT Cube;
MZP 5, 10;
DRP 4, 0, 2, -2, 0, -4, -4, 0, -2, 2, 0, 4;
MRP 4, 0;
DRP 0, -4, -4, 0, 4, 0, 2, -2;
PAGE;
EXIT;</value>
  </data>
  <data name="FRPODrawFilledInBlock" xml:space="preserve">
    <value>!R! RES; UNIT C;
MAP 5, 5;
PAT 20;
BOX 4, 1; BLK 4, 1;
MRP 0, 1.5;
BOX 4, 1; BLK 4, 1;
MRP .9, .6;
SFNT "Helvetica-Nr";
TEXT "OVERPRINTING";
MRP 0, 5;
PAT 29; BOX 1, -4; BLK 1, -4, H;
PAT 39; BOX 1, -3; BLK 1, -3, H;
PAT 49; BOX 1, -2; BLK 1, -2, H;
PAT 59; BOX 1, -1; BLK 1, -1, H;
PAGE;
EXIT;</value>
  </data>
  <data name="FRPOFillClosedPath" xml:space="preserve">
    <value>!R! RES; UNIT C; SIMG 1;
CMNT Drawing clusters;
NEWP;
PMZP 10, 12; PDRP -5.7, -1.75;
PCRP 0, 0, 0, -3.4, 3.1, -3.6; CLSP; PAT 2; FILL;
PMZP 10, 12; PDRP -2.6, -5.35;
PCRP 0, 0, 2.5, -2.5, 4.9, .1; CLSP; PAT 3; FILL;
PMZP 10, 12; PDRP 5.7, -1.75;
PCRP 0, 0, 0, -3.5, -3.4, -3.5; CLSP; PAT 4; FILL;
PMZP 12, 12; PDRP 5.7, -1.75;
PCRP 0, 0, 1.5, 1.75, 0, 3.5; CLSP; PAT 5; FILL;
PMZP 10, 12; PDRP -5.7, 1.75;
PCRP 0, 0, 0, 3.4, 3.1, 3.6; CLSP; PAT 6; FILL;
PMZP 10, 12; PDRP -2.6, 5.35;
PCRP 0, 0, 2.5, 2.5, 4.9, -.1; CLSP; PAT 7; FILL;
PMZP 10, 12; PDRP 5.7, 1.75;
PCRP 0, 0, 0, 3.5, -3.4, 3.5; CLSP; PAT 8; FILL;
PMZP 10, 12; PDRP -5.7, 1.75;
PCRP 0, 0, -1.5, -1.75, 0, -3.5; CLSP; PAT 9; FILL;
PAGE;
EXIT;</value>
  </data>
  <data name="FRPOFontList" xml:space="preserve">
    <value>!R! FLST; EXIT;</value>
  </data>
  <data name="FRPOInit" xml:space="preserve">
    <value>!R! FRPO INIT; EXIT;</value>
  </data>
  <data name="FRPOCheckDisk" xml:space="preserve">
    <value>!R! CDSK; EXIT;</value>
  </data>
</root>